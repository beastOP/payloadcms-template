name: Build and deploy docker to cloud run
on:
  push:
    paths:
      - ".github/**"
      - "src/**"
      - "scripts/**"
      - "Dockerfile"
      - "package.json"
      - "app.yaml"

    branches: ["main"]

env:
  IMAGE_NAME: payloadcms-blog
  PROJECT_ID: payloadcms-test
  MONGODB_URI: ${{ secrets.MONGODB_URI }}
  PAYLOAD_SECRET: ${{ secrets.PAYLOAD_SECRET }}
  SMTP_HOST: ${{ secrets.SMTP_HOST}}
  SMTP_USER: ${{ secrets.SMTP_USER }}
  SMTP_PASS: ${{ secrets.SMTP_PASS }}

jobs:
  build-push-gcr:
    permissions:
      contents: "read"
      id-token: "write"
    name: Build and push to gcr
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # GCP Authentications
      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v1"
        with:
          # token_format: "access_token" # uncomment when using docker/login-action
          credentials_json: "${{ secrets.SERVICE_ACCOUNT_KEY }}"

      # Initialise gcloud sdk
      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      # Authenticate docker with gcr.io
      # - uses: "docker/login-action@v1"
      #   with:
      #     registry: "gcr.io" # or REGION-docker.pkg.dev
      #     username: "oauth2accesstoken"
      #     password: "${{ steps.auth.outputs.access_token }}"
      # - run: |-
      #     echo '${{ steps.auth.outputs.access_token }}' | docker login -u oauth2accesstoken --password-stdin https://gcr.io

      # Authenticate docker with gcloud
      - name: Configure Docker Client
        run: |-
          gcloud auth configure-docker --quiet

      # Copy the account screct to json for docker file
      - name: Create service account key file
        env:
          GCP_SA_KEY: "${{ secrets.SERVICE_ACCOUNT_KEY }}"
        run: |-
          echo "$GCP_SA_KEY" > key.json

      # Build the docker image
      - name: Build Docker Image
        run: docker build --build-arg PAYLOAD_PUBLIC_PAYLOAD_URL=${{ secrets.PAYLOAD_URL }} -t $IMAGE_NAME:latest  .
      # END Build

      # Enable auto tagging
      - name: Automatic Tagging of Releases
        id: increment-git-tag
        run: |-
          bash ./scripts/git_update.sh -v major

      # Push the docker image to gcr
      - name: Push Docker Image to Container Registry (GCR)
        env:
          GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
          IMAGE_URL: "gcr.io/${{env.PROJECT_ID}}/${{env.IMAGE_NAME}}"
        run: |-
          docker tag $IMAGE_NAME:latest ${{ env.IMAGE_URL }}:latest
          docker tag $IMAGE_NAME:latest ${{ env.IMAGE_URL }}:$GIT_TAG
          docker push ${{ env.IMAGE_URL }}:latest
          docker push ${{ env.IMAGE_URL }}:$GIT_TAG

      # Deploy to app engine
      # - name: Deploy to App Engine
      #   env:
      #     GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
      #     IMAGE_URL: "gcr.io/${{env.PROJECT_ID}}/${{env.IMAGE_NAME}}"
      #   run: |-
      #     gcloud app deploy --image-url=${{ env.IMAGE_URL }}:$GIT_TAG \
      #     --project=${{ env.PROJECT_ID }} \
      #     --set-env-vars=MONGODB_URI=${{ env.MONGODB_URI }},SMTP_HOST=${{ env.SMTP_HOST }},SMTP_USER=${{ env.SMTP_USER }},SMTP_PASS=${{ env.SMTP_PASS }}

      - name: Deploy to App Engine
        uses: "google-github-actions/deploy-appengine@v1"
        with:
          flags: "--image-url=gcr.io/${{env.PROJECT_ID}}/${{env.IMAGE_NAME}}:${{ steps.increment-git-tag.outputs.git-tag }}"
          env_vars: |-
            MONGODB_URI=${{ secrets.MONGODB_URI }}
            PAYLOAD_SECRET=${{ secrets.PAYLOAD_SECRET }}
            SMTP_HOST=${{ secrets.SMTP_HOST}}
            SMTP_USER=${{ secrets.SMTP_USER }}
            SMTP_PASS=${{ secrets.SMTP_PASS }}
            PAYLOAD_PUBLIC_PAYLOAD_URL=${{ secrets.PAYLOAD_URL }}
            PAYLOAD_URL=${{ secrets.PAYLOAD_URL }}
            PAYLOAD_PUBLIC_PAYLOAD_API=${{ secrets.PAYLOAD_URL }}
